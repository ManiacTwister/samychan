{% extends 'MMSamyEditorBundle:Layout:base.html.twig' %}

{% set meta_title = scmPackage.filename ~ ' ' ~ scmFileMeta.label %}

{% block sidebar %}
    {{ render(controller('MMSamyEditorBundle:ScmPackage:sidebar', {'scmPackage': scmPackage})) }}
{% endblock %}
{% block content %}
    <h2><i class="fa {{ scmFileMeta.icon }}"></i> {{ scmFileMeta.label }}</h2>


    <div ng-app="SamyChanApp">
        <div ng-controller="ChannelCtrl">
            <ul class="button-group">
                <li><a href="#" class="button" id="reorder-channels" ng-click="reorderChannels()">Reorder Channel-Nos (without gap)</a></li>
            </ul>

        <table st-table="displayedChannels" class="data channels" st-safe-src="channels">
            <thead>
                <tr>
                    {% for name,field in fields %}
                        <td class="{{ field.rendering.className is defined ? field.rendering.className : '' }}">{{ field.label is defined ? field.label : name }}</td>
                    {% endfor %}
                    <td class="options">Options</td>
                </tr>
                <tr><td colspan="{{ fields|length + 1 }}"><input st-search placeholder="global search" class="input-sm form-control" type="search"/></td></tr>
            </thead>
            <tbody ng-keyboardnav>
                <tr ng-repeat="channel in displayedChannels" ng-class="channel.className">
                    {% for name,field in fields %}
                        <td class="{{ field.rendering.className is defined ? field.rendering.className : '' }}">
                            {% if field.editable is defined %}
                                <input type="text" value="[[ channel.{{ name }} ]]" ng-model="channel.{{ name }}">
                            {% else %}
                                {% if (field.rendering.render is defined) and (field.rendering.render == 'boolean') %}
                                    <i class="fa fa-check" ng-if="channel.{{ name }} > 0"></i>
                                {% else %}
                                    [[ channel.{{ name }} {{ field.rendering.render is defined ? '|' ~ field.rendering.render : '' }} ]]
                                {% endif %}
                            {% endif %}
                        </td>
                    {% endfor %}
                    <td class="options">
                        <button class="tiny edit" onclick="$(this).parents('tr:first').find('input:first').focus();"><i class="fa fa-pencil-square-o"></i> Edit</button>
                        <button class="tiny alert save" ng-click="saveChannel($index)"><i class="fa fa-floppy-o"></i> Save</button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    </div>
    <style>
        table.channels {
            border-collapse: collapse;
            table-layout: fixed;
        }
        table.channels button {
            margin: 0;
            padding: 5px 10px;
        }
        table.channels td {
            border: 1px solid #ccc;
        }
        table.channels input {
            border-color: transparent;
            background: transparent;
            box-shadow: none;
            margin-bottom: 0;
            padding: 0;
            height: 25px;
        }
        table.channels tbody td {
            padding: 5px;
        }
        table.channels tr.saving td {
            background: red !important;
        }
        table.channels td.number {
            width: 60px;
        }
        table.channels td.bool {
            width: 50px;
            text-align: center;
        }
        table.channels td.small {
            width: 100px;
        }
        table.channels td.options {
            width: 100px;
            text-align: right;
        }
        table.channels .save {
            display: none;
        }
        table.channels tr.active-row input,
        table.channels tbody tr:hover input {
            background: #fff;
        }
        table.channels tbody tr:hover {
            background: #ddd;
        }
        table.channels tbody tr.active-row {
            background: #92ddd7;
        }
        table.channels tr.active-row .save {
            display: inline;
        }
        table.channels tr.active-row .edit {
            display: none;
        }
        table.channels td.bool {
            text-align: center;
        }
    </style>
    <script>
        var app = angular.module('SamyChanApp', ['smart-table']);
        app.config(function($interpolateProvider) {
            $interpolateProvider.startSymbol('[[');
            $interpolateProvider.endSymbol(']]');
        });

        // filter/renderer for ServiceType
        app.filter('serviceType', function () {
            return function (item) {
                switch (item) {
                    case '01':
                        return 'SD-TV';
                    case '19':
                        return 'HD-TV';
                    case '02':
                        return 'RADIO';
                    default:
                        return 'UNKNOWN';
                }
            };
        });

        app.directive('ngKeyboardnav', function($timeout) {
            return {
                restrict: 'A',
                link: function(scope, element, attrs) {
                    element.on('keydown', 'input', function(event) {
                        var ARROW_LEFT = 37, ARROW_UP = 38, ARROW_RIGHT = 39, ARROW_DOWN = 40, ENTER = 13, ESC = 27, TAB = 9;

                        // ENTER = SUBMIT
                        if (event.which == ENTER) {
                            $(this).parents('tr').find('button.save').click();
                        }

                        // ARROW_DOWN = move down
                        if (event.which == ARROW_DOWN) {
                            var index = $(this).parents('td').index() + 1;
                            $(this).parents('tr').next().find('td:nth-child(' + index + ')').find('input').focus();

                            return false;
                        }

                        // ARROW_UP = move UP
                        if (event.which == ARROW_UP) {
                            var index = $(this).parents('td').index() + 1;
                            $(this).parents('tr').prev().find('td:nth-child(' + index + ')').find('input').focus();

                            return false;
                        }

                        // ESC
                        if (event.which == ESC) {
                            $(this).blur();
                        }
                    });
                }
            };
        });
        app.controller('ChannelCtrl', function ($scope, $http, $timeout, $filter) {
            var editableFields = [];
            {% for name,field in fields %}

                {% if field.editable is defined %}
                    editableFields.push("{{ name }}");
                {% endif %}
            {% endfor %}

            var loadData = function() {
                $http.get('{{ path('mm_samy_editor_scm_file_json', {'hash': scmPackage.hash, 'scmFileId': scmFile.scmFileId}) }}').then(function(res) {
                    $scope.channels = res.data.data;
                    $.unblockUI();
                });
            }

            loadData();

            $scope.reorderChannels = function() {
                $.blockUI();
                $.get("{{ path('mm_samy_editor_scm_file_reorder', {'hash': scmPackage.hash, 'scmFileId': scmFile.scmFileId}) }}", loadData);
            }

            $scope.editChannel = function($index) {
                $scope.channels[$index].className = 'active-row';
            }

            $scope.saveChannel = function($index) {
                $.blockUI();
                $timeout(function() {
                    // get channel data
                    var channelData = $scope.channels[$index];

                    // update ordering
                    channelData.channelNo = parseInt(channelData.channelNo);
                    $scope.channels = $filter('orderBy')($scope.channels, 'channelNo');

                    // build ajax url data gets send to
                    var urlTemplate = "{{ path('mm_samy_editor_scm_channel', {'hash': scmPackage.hash, 'scmChannelId': 'placeholder'}) }}";
                    var url = urlTemplate.replace("placeholder", channelData.channelId);

                    // build formdata
                    var formData = {};
                    $(editableFields).each(function(index, name) {
                        formData[name] = channelData[name];
                    });

                    // submit data to server
                    $.post(url, {
                        'form': formData
                    }, function() {
                        $.unblockUI();
                    });
                }, 1)

            }
        });

        // activate row on focus
        $("table.channels").on('focus', 'input, button.save', function(event) {
            $(this).parents('tr').addClass('active-row');
            $(this).select();
        });
        $("table.channels").on('blur', 'input, button.save', function(event) {
            $(this).parents('tr').removeClass('active-row');
        });
    </script>
{% endblock %}